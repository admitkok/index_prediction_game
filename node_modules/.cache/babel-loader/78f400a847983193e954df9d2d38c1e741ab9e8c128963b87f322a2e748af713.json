{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrkokov/Documents/GitHub/index_predictor/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [intervalData, setIntervalData] = useState([]);\n  const [round, setRound] = useState(0);\n  const [score, setScore] = useState(0);\n  const [result, setResult] = useState('');\n  const chartRef = useRef(null);\n  useEffect(() => {\n    fetchData();\n  }, [round]);\n  useEffect(() => {\n    if (data.length > 0) {\n      selectRandomInterval();\n    }\n  }, [data]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/get_data');\n      setData(response.data.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const selectRandomInterval = () => {\n    const intervalLength = 30;\n    const maxStart = data.length - intervalLength;\n    const startIndex = Math.floor(Math.random() * maxStart);\n    const selectedInterval = data.slice(startIndex, startIndex + intervalLength);\n    setIntervalData(selectedInterval);\n  };\n  const makePrediction = async prediction => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/predict', {\n        prediction\n      });\n      const machine_prediction = response.data.machine_prediction;\n      let message = `Machine predicted: ${machine_prediction}`;\n      if (prediction === machine_prediction) {\n        setScore(score + 1);\n        message += ' - You were correct!';\n      } else {\n        message += ' - You were wrong!';\n      }\n      setResult(message);\n      setRound(round + 1);\n    } catch (error) {\n      console.error('Error making prediction:', error);\n    }\n  };\n  const chartData = {\n    labels: Array.from({\n      length: intervalData.length\n    }, (_, i) => i + 1),\n    datasets: [{\n      label: 'Index Price',\n      data: intervalData,\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Index Prediction Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: intervalData.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          ref: chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading chart...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-up\",\n            onClick: () => makePrediction('up'),\n            children: \"Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-down\",\n            onClick: () => makePrediction('down'),\n            children: \"Down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this), round >= 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-over-container\",\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rZJhKheJtXFbn1IgRNwkATN0j34=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","App","_s","data","setData","intervalData","setIntervalData","round","setRound","score","setScore","result","setResult","chartRef","fetchData","length","selectRandomInterval","response","get","error","console","intervalLength","maxStart","startIndex","Math","floor","random","selectedInterval","slice","makePrediction","prediction","post","machine_prediction","message","chartData","labels","Array","from","_","i","datasets","label","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/aleksandrkokov/Documents/GitHub/index_predictor/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport './App.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [intervalData, setIntervalData] = useState([]);\n  const [round, setRound] = useState(0);\n  const [score, setScore] = useState(0);\n  const [result, setResult] = useState('');\n\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    fetchData();\n  }, [round]);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      selectRandomInterval();\n    }\n  }, [data]);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/get_data');\n      setData(response.data.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const selectRandomInterval = () => {\n    const intervalLength = 30;\n    const maxStart = data.length - intervalLength;\n    const startIndex = Math.floor(Math.random() * maxStart);\n    const selectedInterval = data.slice(startIndex, startIndex + intervalLength);\n    setIntervalData(selectedInterval);\n  };\n\n  const makePrediction = async (prediction) => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/predict', { prediction });\n      const machine_prediction = response.data.machine_prediction;\n\n      let message = `Machine predicted: ${machine_prediction}`;\n      if (prediction === machine_prediction) {\n        setScore(score + 1);\n        message += ' - You were correct!';\n      } else {\n        message += ' - You were wrong!';\n      }\n\n      setResult(message);\n      setRound(round + 1);\n    } catch (error) {\n      console.error('Error making prediction:', error);\n    }\n  };\n\n  const chartData = {\n    labels: Array.from({ length: intervalData.length }, (_, i) => i + 1),\n    datasets: [\n      {\n        label: 'Index Price',\n        data: intervalData,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Index Prediction Game</h1>\n      <div className='game-container'>\n      <div className=\"chart-container\">\n        {intervalData.length > 0 ? (\n          <Line data={chartData} ref={chartRef} />\n        ) : (\n          <p>Loading chart...</p>\n        )}\n      </div>\n      <div className='answer-container'>\n      <p>{result}</p>\n      <p>Score: {score}</p>\n      <div>\n        <button className='button-up' onClick={() => makePrediction('up')}>Up</button>\n        <button className='button-down' onClick={() => makePrediction('down')}>Down</button>\n      </div>\n      {round >= 5 && <div className='game-over-container'>Game Over!</div>}\n    </div>\n    </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}