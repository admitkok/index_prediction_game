{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrkokov/Documents/GitHub/index_predictor/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [intervalData, setIntervalData] = useState([]);\n  const [round, setRound] = useState(0);\n  const [score, setScore] = useState(0);\n  const [result, setResult] = useState('');\n  const [username, setUsername] = useState('');\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [showDescription, setShowDescription] = useState(false);\n  const [realNextPrice, setRealNextPrice] = useState(null);\n  const [machinePrediction, setMachinePrediction] = useState('');\n  const chartRef = useRef(null);\n  const flaskUrl = 'https://b9c1-3-66-113-240.ngrok-free.app/invoke_sagemaker';\n  useEffect(() => {\n    fetchData();\n  }, [round]);\n  useEffect(() => {\n    if (data.length > 0) {\n      selectRandomInterval();\n    }\n  }, [data]);\n  useEffect(() => {\n    if (isRegistered) {\n      fetchLeaderboard();\n    }\n  }, [isRegistered]);\n  const fetchLeaderboard = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/get_leaderboard');\n      setLeaderboard(response.data);\n    } catch (error) {\n      console.error('Error fetching leaderboard:', error);\n    }\n  };\n  const registerUser = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/register', {\n        username\n      });\n      if (response.status === 200) {\n        setIsRegistered(true);\n      }\n    } catch (error) {\n      console.error('Error registering user:', error);\n    }\n  };\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/get_data');\n      const formattedData = response.data.data.map(item => ({\n        timestamp: item[\"Datetime\"],\n        price: item[\"Close\"]\n      }));\n      // console.log(formattedData);\n      setData(formattedData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const selectRandomInterval = () => {\n    const intervalLength = 30;\n    const maxStart = data.length - intervalLength;\n    const startIndex = Math.floor(Math.random() * maxStart);\n    const selectedInterval = data.slice(startIndex, startIndex + intervalLength);\n    setIntervalData(selectedInterval);\n    setRealNextPrice(data[startIndex + intervalLength].price);\n  };\n  const makePrediction = async prediction => {\n    if (round >= 5) return;\n    const lastPrice = intervalData[intervalData.length - 1].price;\n    const lastTimestamp = intervalData[intervalData.length - 1].timestamp;\n    try {\n      const response = await axios.post('https://b9c1-3-66-113-240.ngrok-free.app/invoke_sagemaker', {\n        timestamps: lastTimestamp\n      });\n      const machine_prediction = response.data.machine_prediction;\n      setMachinePrediction(machine_prediction);\n      let playerMessage = `Machine predicted: ${machine_prediction}`;\n      let realMovement = realNextPrice > lastPrice ? 'up' : 'down';\n      if (prediction === realMovement) {\n        setPlayerScore(playerScore + 1);\n        playerMessage += ' - You were correct!';\n      } else {\n        playerMessage += ' - You were wrong!';\n      }\n      if (machine_prediction === realMovement) {\n        setMachineScore(machineScore + 1);\n        playerMessage += ' Machine was correct!';\n      } else {\n        playerMessage += ' Machine was wrong!';\n      }\n      setResult(playerMessage);\n      setRound(round + 1);\n      setTriesLeft(triesLeft - 1); // Decrement tries left\n\n      if (round === 4) {\n        await axios.post('https://b9c1-3-66-113-240.ngrok-free.app/update_score', {\n          username,\n          score: playerScore + 1\n        });\n        fetchLeaderboard();\n      }\n    } catch (error) {\n      console.error('Error making prediction:', error);\n    }\n  };\n  const resetGame = () => {\n    setRound(0);\n    setPlayerScore(0);\n    setMachineScore(0);\n    setResult('');\n    setIntervalData([]);\n    setRealNextPrice(null);\n    setMachinePrediction('');\n    fetchData();\n  };\n  const chartData = {\n    labels: intervalData.map(item => item.timestamp),\n    datasets: [{\n      label: 'Index Price',\n      data: intervalData.map(item => item.price),\n      borderColor: 'rgba(10, 10, 255, 1)',\n      borderWidth: 1\n    }, {\n      label: 'Next Minute Price',\n      data: realNextPrice ? [...intervalData.map(() => null), realNextPrice] : [],\n      borderColor: 'rgba(255, 0, 0, 1)',\n      borderWidth: 1\n    }]\n  };\n  const toggleDescription = () => {\n    setShowDescription(!showDescription);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginBottom: \"0px\",\n        fontSize: \"80px\"\n      },\n      children: \"Index Prediction Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"question-mark\",\n      onClick: toggleDescription,\n      children: \"?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), showDescription && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to the Index Prediction Game! In this game, you will see a graph showing the S&P 500 index prices for a randomly selected 30-minute interval. Your task is to predict whether the price will go up or down in the next minute. You have 5 tries to make your predictions. Your score will be updated based on the accuracy of your predictions. Good luck and have fun!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), !isRegistered ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerUser,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"This is an S&P 500 index price graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Guess where the price will go\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: intervalData.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData,\n            ref: chartRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading chart...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [score, \"/\", round]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [result, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-up\",\n              onClick: () => makePrediction('up'),\n              disabled: round >= 5,\n              children: \"Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-down\",\n              onClick: () => makePrediction('down'),\n              disabled: round >= 5,\n              children: \"Down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 11\n          }, this), realNextPrice && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Next Minute Real Price: \", realNextPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this), machinePrediction && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Machine Prediction: \", machinePrediction]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), round >= 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-over-container\",\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your final score is: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: \"48px\"\n          },\n          children: \"Leaderboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: leaderboard.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: entry.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: entry.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"f9qpFKZuhfkWWXcZP2er19TvtX0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","register","App","_s","data","setData","intervalData","setIntervalData","round","setRound","score","setScore","result","setResult","username","setUsername","isRegistered","setIsRegistered","leaderboard","setLeaderboard","showDescription","setShowDescription","realNextPrice","setRealNextPrice","machinePrediction","setMachinePrediction","chartRef","flaskUrl","fetchData","length","selectRandomInterval","fetchLeaderboard","response","get","error","console","registerUser","e","preventDefault","post","status","formattedData","map","item","timestamp","price","intervalLength","maxStart","startIndex","Math","floor","random","selectedInterval","slice","makePrediction","prediction","lastPrice","lastTimestamp","timestamps","machine_prediction","playerMessage","realMovement","setPlayerScore","playerScore","setMachineScore","machineScore","setTriesLeft","triesLeft","resetGame","chartData","labels","datasets","label","borderColor","borderWidth","toggleDescription","className","children","style","marginBottom","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","onChange","target","required","ref","disabled","entry","index","_c","$RefreshReg$"],"sources":["/Users/aleksandrkokov/Documents/GitHub/index_predictor/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport './App.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [intervalData, setIntervalData] = useState([]);\n  const [round, setRound] = useState(0);\n  const [score, setScore] = useState(0);\n  const [result, setResult] = useState('');\n  const [username, setUsername] = useState('');\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [showDescription, setShowDescription] = useState(false);\n  const [realNextPrice, setRealNextPrice] = useState(null);\n  const [machinePrediction, setMachinePrediction] = useState('');\n\n  const chartRef = useRef(null);\n\n  const flaskUrl = 'https://b9c1-3-66-113-240.ngrok-free.app/invoke_sagemaker';\n\n  useEffect(() => {\n    fetchData();\n  }, [round]);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      selectRandomInterval();\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (isRegistered) {\n      fetchLeaderboard();\n    }\n  }, [isRegistered]);\n\n  const fetchLeaderboard = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/get_leaderboard');\n      setLeaderboard(response.data);\n    } catch (error) {\n      console.error('Error fetching leaderboard:', error);\n    }\n  };\n\n  const registerUser = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/register', { username });\n      if (response.status === 200) {\n        setIsRegistered(true);\n      }\n    } catch (error) {\n      console.error('Error registering user:', error);\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/get_data');\n      const formattedData = response.data.data.map(item => ({\n        timestamp: item[\"Datetime\"],\n        price: item[\"Close\"]\n      }));\n      // console.log(formattedData);\n      setData(formattedData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const selectRandomInterval = () => {\n    const intervalLength = 30;\n    const maxStart = data.length - intervalLength;\n    const startIndex = Math.floor(Math.random() * maxStart);\n\n    const selectedInterval = data.slice(startIndex, startIndex + intervalLength);\n    setIntervalData(selectedInterval);\n    setRealNextPrice(data[startIndex + intervalLength].price);\n  };\n\n  const makePrediction = async (prediction) => {\n    if (round >= 5) return;\n\n    const lastPrice = intervalData[intervalData.length - 1].price;  \n    const lastTimestamp = intervalData[intervalData.length - 1].timestamp;\n  \n    try {\n      const response = await axios.post('https://b9c1-3-66-113-240.ngrok-free.app/invoke_sagemaker', { timestamps: lastTimestamp });\n      const machine_prediction = response.data.machine_prediction;\n      setMachinePrediction(machine_prediction);\n  \n      let playerMessage = `Machine predicted: ${machine_prediction}`;\n      let realMovement = realNextPrice > lastPrice ? 'up' : 'down';\n\n      if (prediction === realMovement) {\n        setPlayerScore(playerScore + 1);\n        playerMessage += ' - You were correct!';\n      } else {\n        playerMessage += ' - You were wrong!';\n      }\n\n      if (machine_prediction === realMovement) {\n        setMachineScore(machineScore + 1);\n        playerMessage += ' Machine was correct!';\n      } else {\n        playerMessage += ' Machine was wrong!';\n      }\n\n      setResult(playerMessage);\n      setRound(round + 1);\n      setTriesLeft(triesLeft - 1);  // Decrement tries left\n\n      if (round === 4) {\n        await axios.post('https://b9c1-3-66-113-240.ngrok-free.app/update_score', { username, score: playerScore + 1 });\n        fetchLeaderboard();\n      }\n    } catch (error) {\n      console.error('Error making prediction:', error);\n    }\n  }; \n\n  const resetGame = () => {\n      setRound(0);\n      setPlayerScore(0);\n      setMachineScore(0);\n      setResult('');\n      setIntervalData([]);\n      setRealNextPrice(null);\n      setMachinePrediction(''); \n      fetchData();\n  };\n\n  const chartData = {\n    labels: intervalData.map(item => item.timestamp),\n    datasets: [\n      {\n        label: 'Index Price',\n        data: intervalData.map(item => item.price),\n        borderColor: 'rgba(10, 10, 255, 1)',\n        borderWidth: 1,\n      },\n      {\n        label: 'Next Minute Price',\n        data: realNextPrice ? [...intervalData.map(() => null), realNextPrice] : [],\n        borderColor: 'rgba(255, 0, 0, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const toggleDescription = () => {\n    setShowDescription(!showDescription);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 style={{marginBottom:\"0px\", fontSize: \"80px\"}}>Index Prediction Game</h1>\n      <button className=\"question-mark\" onClick={toggleDescription}>?</button>\n      {showDescription && (\n        <div className=\"description\">\n          <p>Welcome to the Index Prediction Game! In this game, you will see a graph showing the S&P 500 index prices for a randomly selected 30-minute interval. Your task is to predict whether the price will go up or down in the next minute. You have 5 tries to make your predictions. Your score will be updated based on the accuracy of your predictions. Good luck and have fun!</p>\n        </div>\n      )}\n      {!isRegistered ? (\n        <form onSubmit={registerUser}>\n          <input\n            type=\"text\"\n            placeholder=\"Enter username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n          <button type=\"submit\">Register</button>\n        </form>\n      ) : (\n        <>\n        <div>\n        <h3>This is an S&P 500 index price graph</h3>\n        <h3>Guess where the price will go</h3>\n        </div>\n        <div className='game-container'>\n          <div className=\"chart-container\">\n            {intervalData.length > 0 ? (\n              <Line data={chartData} ref={chartRef} />\n            ) : (\n              <p>Loading chart...</p>\n            )}\n          </div>\n          <div className='answer-container'>\n          <p>Your score:</p>\n          <h1>{score}/{round}</h1>\n          <p>{result} </p>\n          <div>\n            <button className='button-up' onClick={() => makePrediction('up')} disabled={round >= 5}>Up</button>\n            <button className='button-down' onClick={() => makePrediction('down')} disabled={round >= 5}>Down</button>\n          </div>\n          {realNextPrice && <p>Next Minute Real Price: {realNextPrice}</p>}\n          {machinePrediction && <p>Machine Prediction: {machinePrediction}</p>}\n        </div>\n        </div>\n        {round >= 5 && (\n          <div className=\"overlay\">\n              <div className='game-over-container'>Game Over!</div>\n              <p>Your final score is: {score}</p>\n              <button onClick={resetGame}>Retry</button>\n          </div>)\n        }\n         <div className=\"leaderboard\">\n            <h2 style={{fontSize:\"48px\"}}>Leaderboard</h2>\n            <table>\n              <thead>\n                <tr>\n                  <th>Rank</th>\n                  <th>Username</th>\n                  <th>Score</th>\n                </tr>\n              </thead>\n              <tbody>\n                {leaderboard.map((entry, index) => (\n                  <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>{entry.username}</td>\n                    <td>{entry.score}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}