{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrkokov/Documents/GitHub/index_predictor/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chart from 'chart.js/auto';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [predictions, setPredictions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [userPrediction, setUserPrediction] = useState(null);\n  const flaskUrl = 'https://8bfa-3-66-113-240.ngrok-free.app/invoke_sagemaker';\n  useEffect(() => {\n    // Fetch data from Flask endpoint\n    axios.get('/get_data').then(response => {\n      setData(response.data);\n      // Initialize chart with the response data\n      initializeChart(response.data);\n    }).catch(error => {\n      console.error(\"There was an error fetching the data!\", error);\n    });\n  }, []);\n  const initializeChart = data => {\n    const ctx = document.getElementById('myChart').getContext('2d');\n    new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: data.map(point => point.time),\n        datasets: [{\n          label: 'Price',\n          data: data.map(point => point.price),\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          x: {\n            type: 'category',\n            labels: data.map(point => point.time)\n          },\n          y: {\n            beginAtZero: false\n          }\n        }\n      }\n    });\n  };\n  const makePrediction = prediction => {\n    setUserPrediction(prediction);\n    axios.post(flaskUrl, {\n      data: data\n    }).then(response => {\n      const machinePrediction = response.data.prediction;\n      setPredictions([...predictions, machinePrediction]);\n\n      // Check if user prediction matches machine prediction\n      if (prediction === machinePrediction) {\n        setScore(score + 1);\n      }\n      if (currentStep === 4) {\n        setGameOver(true);\n      } else {\n        setCurrentStep(currentStep + 1);\n      }\n    }).catch(error => {\n      console.error(\"There was an error making the prediction!\", error);\n    });\n  };\n  const retryGame = () => {\n    setScore(0);\n    setCurrentStep(0);\n    setGameOver(false);\n    setUserPrediction(null);\n    setPredictions([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${gameOver ? 'game-over' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Price Prediction Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => makePrediction('up'),\n        disabled: gameOver,\n        children: \"Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => makePrediction('down'),\n        disabled: gameOver,\n        children: \"Down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Game Over! Your score is: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: retryGame,\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"02ePqkiIQ8hAM1LORJz2J/vadVU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chart","axios","jsxDEV","_jsxDEV","App","_s","data","setData","predictions","setPredictions","score","setScore","currentStep","setCurrentStep","gameOver","setGameOver","userPrediction","setUserPrediction","flaskUrl","get","then","response","initializeChart","catch","error","console","ctx","document","getElementById","getContext","type","labels","map","point","time","datasets","label","price","borderColor","borderWidth","options","scales","x","y","beginAtZero","makePrediction","prediction","post","machinePrediction","retryGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/aleksandrkokov/Documents/GitHub/index_predictor/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Chart from 'chart.js/auto';\nimport axios from 'axios';\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [predictions, setPredictions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [userPrediction, setUserPrediction] = useState(null);\n\n  const flaskUrl = 'https://8bfa-3-66-113-240.ngrok-free.app/invoke_sagemaker';\n\n  useEffect(() => {\n    // Fetch data from Flask endpoint\n    axios.get('/get_data')\n      .then(response => {\n        setData(response.data);\n        // Initialize chart with the response data\n        initializeChart(response.data);\n      })\n      .catch(error => {\n        console.error(\"There was an error fetching the data!\", error);\n      });\n  }, []);\n\n  const initializeChart = (data) => {\n    const ctx = document.getElementById('myChart').getContext('2d');\n    new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: data.map(point => point.time),\n        datasets: [{\n          label: 'Price',\n          data: data.map(point => point.price),\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          x: {\n            type: 'category',\n            labels: data.map(point => point.time)\n          },\n          y: {\n            beginAtZero: false\n          }\n        }\n      }\n    });\n  };\n\n  const makePrediction = (prediction) => {\n    setUserPrediction(prediction);\n    axios.post(flaskUrl, { data: data })\n      .then(response => {\n        const machinePrediction = response.data.prediction;\n        setPredictions([...predictions, machinePrediction]);\n\n        // Check if user prediction matches machine prediction\n        if (prediction === machinePrediction) {\n          setScore(score + 1);\n        }\n\n        if (currentStep === 4) {\n          setGameOver(true);\n        } else {\n          setCurrentStep(currentStep + 1);\n        }\n      })\n      .catch(error => {\n        console.error(\"There was an error making the prediction!\", error);\n      });\n  };\n\n  const retryGame = () => {\n    setScore(0);\n    setCurrentStep(0);\n    setGameOver(false);\n    setUserPrediction(null);\n    setPredictions([]);\n  };\n\n  return (\n    <div className={`app ${gameOver ? 'game-over' : ''}`}>\n      <h1>Price Prediction Game</h1>\n      <canvas id=\"myChart\"></canvas>\n      <div className=\"buttons\">\n        <button onClick={() => makePrediction('up')} disabled={gameOver}>Up</button>\n        <button onClick={() => makePrediction('down')} disabled={gameOver}>Down</button>\n      </div>\n      {gameOver && (\n        <div className=\"game-over-screen\">\n          <p>Game Over! Your score is: {score}</p>\n          <button onClick={retryGame}>Retry</button>\n        </div>\n      )}\n      <div className=\"leaderboard\">\n        <h2>Leaderboard</h2>\n        {/* Leaderboard implementation */}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}